(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=2)})([function(a){a.exports=function(a){this.x=0,this.y=0,this.width=0,this.height=0,a!==void 0&&this.setRect(a),this.setRect=function(a){this.x=a.x,this.y=a.y,this.width=a.width,this.height=a.height},this.expandRect=function(a){this.x-=a,this.width+=2*a,this.y-=a,this.height+=2*a},this.addToBounds=function(a){if(0==this.x&&0==this.y&&0==this.width&&0==this.height)return this.x=a.x,this.y=a.y,this.width=a.width,void(this.height=a.height);var b=this.x,c=this.y,d=this.x+this.width,e=this.y+this.height;b>a.x&&(b=a.x),c>a.y&&(c=a.y),d<a.x+a.width&&(d=a.x+a.width),e<a.y+a.height&&(e=a.y+a.height),this.x=b,this.y=c,this.width=d-this.x,this.height=e-this.y},this.reset=function(){this.x=0,this.y=0,this.width=0,this.height=0},this.pointInRect=function(a,b){return a<this.x||a>this.x+this.width||b<this.y||b>this.y+this.height?!1:!0}}},function(a,b,c){var e=c(0);a.exports=new function(){this.contourSteps=10,this.contourNodeExtend=120,this.computeBounds=function(a){var b=new e;for(var c in a){var f=a[c];b.addToBounds({x:f.x,y:f.y,width:0.5*f.width,height:f.height})}return b},this._getContour=function(a,b,c){for(var d,e=(b.width+this.contourNodeExtend)/this.contourSteps,f=0;f<e+1;f++){d=(b.x+e*f)/this.contourSteps,d=Math.floor(d);var g;0==c?(g=b.y+b.height,a[d]==void 0&&(a[d]=g),a[d]<g&&(a[d]=g)):(g=b.y,a[d]==void 0&&(a[d]=g),a[d]>g&&(a[d]=g))}for(var h in b.children){var i=b.children[h];this._getContour(a,i,c)}},this.getUpperContour=function(a,b){var c=b;return void 0==b&&(c=[]),this._getContour(c,a,1),c},this.getLowerContour=function(a,b){var c=b;return void 0==b&&(c=[]),this._getContour(c,a,0),c},this._fillContourGap=function(a){var b,c,d;for(b in a){if(c!=void 0){var e=a[c];for(d=c;d<b;d++)void 0==a[d]&&(a[d]=e)}c=b}},this.compareContours=function(a,b){this._fillContourGap(a),this._fillContourGap(b);var c;for(var d in a){c=d;break}var e;for(d=c;;d++){var f=a[d],g=b[d];if(f==void 0||g==void 0)break;var h=g-f;(e==void 0||e>h)&&(e=h)}return e},this.moveTree=function(a,b,c){for(var d in a.x+=b,a.y+=c,a.children){var e=a.children[d];this.moveTree(e,b,c)}}}},function(a,b,c){d3TidyTree={Layout:c(3),Rect:c(0),Util:c(1)}},function(a,b,c){var d=c(0),e=c(1);a.exports=function(){this.compressTree=!0,this.centerNodeOverChildren=!0,this.tryToBalanceTree=!0,this.deltaX=0,this.deltaY=this.deltaX?0:1,this.direction=1,this.parentChildSeparation=100,this._thirdWalk=function(a){e.contourNodeExtend=this.parentChildSeparation/4;var b,d=[],f=[];for(var g in a.children){var h=a.children[g];if(this._thirdWalk(h),void 0!=b){e.getLowerContour(b,d);var c=e.getUpperContour(h),i=e.compareContours(d,c);if(0<i)if(this.tryToBalanceTree){for(j in e.moveTree(h,0,-i/2),f)e.moveTree(f[j],0,i/2);for(j in d)d[j]+=i/2}else e.moveTree(h,0,-i)}b=h,f.push(h)}},this._secondWalk=function(a,b,c){void 0==a.parent&&(a.rx=0,a.ry=0),a.direction=this.direction,a.x=a.rx+b,a.y=a.ry+c,a.px=a.x+a.width*this.direction*this.deltaY,a.py=a.y+a.height*this.direction*this.deltaX;var d=0,d=0;a.width>a.childrenBounds.width&&(d=this.deltaX*(a.width/2-a.childrenBounds.height/2));var e=0;for(var f in a.height>a.childrenBounds.height&&(e=this.deltaY*(a.height/2-a.childrenBounds.height/2)),a.children){var g=a.children[f];this._secondWalk(g,a.px+this.parentChildSeparation*this.direction*this.deltaY+d,a.py+this.parentChildSeparation*this.direction*this.deltaX+e)}this.centerNodeOverChildren&&(a.x+=this.deltaX*(a.bounds.width/2-a.width/2),a.y+=this.deltaY*(a.bounds.height/2-a.height/2))},this._firstWalk=function(a){a.direction=this.direction;var b=new d;b.addToBounds({x:0,y:0,width:a.width,height:a.height});var c=new d,e=0*this.deltaX,f=0*this.deltaY;for(var g in a.children){var h=a.children[g];this._firstWalk(h),h.rx=e,h.ry=f,b.addToBounds({x:e,y:f,width:h.bounds.width,height:h.bounds.height}),c.addToBounds({x:e,y:f,width:h.bounds.width,height:h.bounds.height}),e+=this.deltaX*(h.bounds.width+0),f+=this.deltaY*(h.bounds.height+0)}a.bounds={x:b.x,y:b.y,width:b.width,height:b.height},a.childrenBounds={x:c.x,y:c.y,width:c.width,height:c.height}},this.tree=function(a){this._firstWalk(a),this._secondWalk(a,0,0),this.compressTree&&this._thirdWalk(a),e.moveTree(a,-a.x,-a.y)}}}]);